import http.server
import socketserver
from urllib.parse import urlparse
from urllib.parse import parse_qs
from threading import Thread

class MyHttpRequestHandler(http.server.SimpleHTTPRequestHandler):
    def do_GET(self):
        # Sending an '200 OK' response
        self.send_response(200)

        # Setting the header
        self.send_header("Content-type", "text/html")

        # Whenever using 'send_header', you also have to call 'end_headers'
        self.end_headers()

        # Extract query param
        name = 'World'

        # Here I can run the job [based on the type of the pod]

        # Some custom HTML code, possibly generated by another function
        html = f"<html><head></head><body><h1>Hello {name}!</h1></body></html>"

        # Writing the HTML contents with UTF-8
        self.wfile.write(bytes(html, "utf8"))

        return

def start_server():
    # Create an object of the above class
    handler_object = MyHttpRequestHandler
    PORT = 8001
    my_server = socketserver.TCPServer(("", PORT), handler_object)
    my_server.serve_forever()

def main():
    start_server()
    
 

if __name__ == '__main__':
    main()