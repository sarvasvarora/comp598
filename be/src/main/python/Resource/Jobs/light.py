import http.server
import socketserver
from urllib.parse import urlparse
from urllib.parse import parse_qs
from threading import Thread
import sys, os
import time

class LightHttpRequestHandler(http.server.SimpleHTTPRequestHandler):
    def do_GET(self):
        # Sending an '200 OK' response
        self.send_response(200)

        # Setting the header
        self.send_header("Content-type", "text/html")

        # Whenever using 'send_header', you also have to call 'end_headers'
        self.end_headers()

        # Extract query param
        message = f'LIGHT job'
        heading = f"<html><head></head><body><h1>{message}</h1></body></html>"
        self.wfile.write(bytes(heading, "utf8"))

        # Some custom HTML code, possibly generated by another function
        message = f'Starting the job.'
        start_msg = f"<html><head></head><body><p>{message}</p></body></html>"
        self.wfile.write(bytes(start_msg, "utf8"))
        
        start = time.time()
        output = self.lightJob()
        duration = time.time() - start

        # Some custom HTML code, possibly generated by another function
        message = f'Finished the job. Took {duration} seconds. Output was {output}'
        end_msg = f"<html><head></head><body><p><br>{message}</br></p></body></html>"
        self.wfile.write(bytes(end_msg, "utf8"))

        return

    def lightJob(self):
        s = "hello"
        t = "world"
        res = s + " " + t
        print(res)
        return res

def start_server(PORT):
    my_server = socketserver.TCPServer(("", PORT), LightHttpRequestHandler)
    my_server.serve_forever()

def main():
    port_num = sys.argv[1]
    start_server(int(port_num))

if __name__ == '__main__':
    main()